/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.SalvarImagemDAO;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import javax.imageio.ImageIO;

/**
 *
 * @author Caio Henrique
 */
public class SelecionarImagem extends javax.swing.JPanel {

    /**
     * Creates new form selecionarImagem
     */
    BufferedImage imagemSelecionada ;
    
      private double imgAltura;
    private double imgLargura;
    public  SelecionarImagem(BufferedImage img) throws IOException, SQLException {
        initComponents();
        //this.imagemSelecionada = ImageIO.read(new File(URL));
        //System.out.println("222");
        this.imagemSelecionada = img;
        redimencionar();
        this.setVisible(true);
        this.setLayout(new GridLayout());
        
        }
    void redimencionar() throws SQLException, IOException{
        
        
        
        double novaImgLargura ;
        double novaImgAltura;
        double imgLargura = 750.0;
        double imgAltura =   400.0;
        double imgProporcao;
       
        novaImgLargura = (double) this.imagemSelecionada.getWidth();

        //--- Obtám a altura da imagem ---  
        novaImgAltura = (double) this.imagemSelecionada.getHeight();
        System.out.println("largura = "+novaImgLargura+"altura="+novaImgAltura);

    //--- Verifica se a altura ou largura da imagem recebida é maior do que os ---  
        //--- parâmetros de altura e largura recebidos para o redimensionamento   ---  
        if (novaImgLargura >= imgLargura) {
            imgProporcao = (novaImgAltura / novaImgLargura);//calcula a proporção  
            novaImgLargura = (double) imgLargura;

            //--- altura deve <= ao parâmetro imgAltura e proporcional a largura ---  
            novaImgAltura = (novaImgLargura * imgProporcao);

        //--- se altura for maior do que o parâmetro imgAltura, diminui-se a largura de ---  
            //--- forma que a altura seja igual ao parâmetro imgAltura e proporcional a largura ---  
            while (novaImgAltura >= imgAltura) {
                novaImgLargura = (double) (--imgLargura);
                novaImgAltura = (novaImgLargura * imgProporcao);
            }
        } else if (novaImgAltura >= imgAltura) {
            imgProporcao = (novaImgLargura / novaImgAltura);//calcula a proporção  
            novaImgAltura = (double) imgAltura;

        //--- se largura for maior do que o parâmetro imgLargura, diminui-se a altura de ---  
            //--- forma que a largura seja igual ao parâmetro imglargura e proporcional a altura ---  
            while (novaImgLargura > imgLargura) {
                novaImgAltura = (double) (--imgAltura);
                novaImgLargura = (novaImgAltura * imgProporcao);
            }
        
        }
        this.imgAltura = novaImgAltura;
        this.imgLargura = novaImgLargura;
        System.out.println(novaImgAltura+" "+novaImgLargura);

        
       
        }
    
    @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        
        Graphics2D g2d = (Graphics2D) g;
        int x = (this.getWidth() -  (int)this.imgLargura) / 2;
        int y = (this.getHeight() - (int)this.imgAltura) / 2;
        System.out.println("x="+x+"y="+y);
        g.drawImage(imagemSelecionada, x,y,(int)this.imgAltura,(int)this.imgLargura, this);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(1, 1));
        setPreferredSize(new java.awt.Dimension(760, 402));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

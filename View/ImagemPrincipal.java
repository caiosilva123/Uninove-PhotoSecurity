
package View;

import DAO.SalvarImagemDAO;
import Model.Usuario;
import com.mysql.cj.jdbc.Blob;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.SQLException;
import javax.imageio.ImageIO;

/**
 * Form onde sera apresentada a imagem 
 * 
 * @author Caio Henrique
 */
public class ImagemPrincipal extends javax.swing.JPanel {
    private BufferedImage imagem ;
    private int id ;
    private String pasta = Usuario.pasta;
    private double imgAltura;
    private double imgLargura;
 
   
    
    public ImagemPrincipal(String idimagem) throws SQLException, IOException {

        initComponents();
        this.id = Usuario.getId();
        mostrarFoto(idimagem);
        this.setVisible(true);
        this.setLayout(new GridLayout());
        
    }
    
    
    public boolean mostrarFoto(String idimagem) throws SQLException, IOException{
        int idimage = Integer.parseInt(idimagem);
        try{
            byte[] imgBytes = SalvarImagemDAO.recuperarImagemUnica(this.id,idimage);
        
        ByteArrayInputStream bis = new ByteArrayInputStream(imgBytes);
            
        this.imagem = ImageIO.read(bis);
            
        }catch(IOException | SQLException a){System.out.println(a);
        }    
        
        
        double novaImgLargura ;
        double novaImgAltura;
        double imgLargura = 750.0;
        double imgAltura =   400.0;
        double imgProporcao;
       
        novaImgLargura = (double) imagem.getWidth();

        //--- Obtám a altura da imagem ---  
        novaImgAltura = (double) imagem.getHeight();

    //--- Verifica se a altura ou largura da imagem recebida é maior do que os ---  
        //--- parâmetros de altura e largura recebidos para o redimensionamento   ---  
        if (novaImgLargura >= imgLargura) {
            imgProporcao = (novaImgAltura / novaImgLargura);//calcula a proporção  
            novaImgLargura = (double) imgLargura;

            //--- altura deve <= ao parâmetro imgAltura e proporcional a largura ---  
            novaImgAltura = (novaImgLargura * imgProporcao);

        //--- se altura for maior do que o parâmetro imgAltura, diminui-se a largura de ---  
            //--- forma que a altura seja igual ao parâmetro imgAltura e proporcional a largura ---  
            while (novaImgAltura > imgAltura) {
                novaImgLargura = (double) (--imgLargura);
                novaImgAltura = (novaImgLargura * imgProporcao);
            }
        } else if (novaImgAltura >= imgAltura) {
            imgProporcao = (novaImgLargura / novaImgAltura);//calcula a proporção  
            novaImgAltura = (double) imgAltura;

        //--- se largura for maior do que o parâmetro imgLargura, diminui-se a altura de ---  
            //--- forma que a largura seja igual ao parâmetro imglargura e proporcional a altura ---  
            while (novaImgLargura > imgLargura) {
                novaImgAltura = (double) (--imgAltura);
                novaImgLargura = (novaImgAltura * imgProporcao);
            }
        
        }
        this.imgAltura = novaImgAltura;
        this.imgLargura = novaImgLargura;
        

        
        return true;
        }
    
  
    
    //Desenhando a imagem recebida nesse painel.
    @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        int x = (this.getWidth() - (int)this.imgLargura ) / 2;
        int y = (this.getHeight() - (int)this.imgAltura) / 2;
        
        
        g.drawImage(this.imagem, x,y ,(int)this.imgLargura,(int)this.imgAltura, this);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(760, 402));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 786, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
